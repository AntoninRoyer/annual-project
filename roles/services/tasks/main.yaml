---
- name: Disabling and stopping the non-necessary services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: false
    state: stopped
  loop: "{{ services_list }}"


- name: "Disabling non-essential features of services"
  community.general.capabilities:
    path: "{{ item.key }}"
    state: absent
    capability: "{{ item.value }}"
  loop: "{{ capabilities_map | dict2items }}"

# - name: "Configuring the privileges of the services"

# - name: "Partitioning the services"

# - name: "Hardening the partitioning components"

# Limit the elevation to root via su to the members of the group 'wheel ' only part 1
- name: "Secure remote authentication with PAM 1"
  ansible.builtin.template:
    src: su.j2
    dest: /etc/pam.d/su
    owner: root
    group: wheel
    mode: '0644'


# Limit the elevation to root via su to the members of the group 'wheel ' only part 2
- name: "Secure remote authentication with PAM 2"
  ansible.builtin.template:
    src: su-l.j2
    dest: /etc/pam.d/su-l
    owner: root
    group: wheel
    mode: '0644'


# At least 12 characters of 3 different classes among the uppercase letters ,
# lowercase letters , numbers and others by prohibiting repetition
# of a character
- name: "Secure remote authentication with PAM 3"
  ansible.builtin.template:
    src: passwd.j2
    dest: /etc/pam.d/passwd
    owner: root
    group: wheel
    mode: '0644'

#Account blocking for 5 min after 3 failures part 1
- name: "Secure remote authentication with PAM 4"
  ansible.builtin.template:
    src: passwd.j2
    dest: /etc/pam.d/login
    owner: root
    group: wheel
    mode: '0644'

#Account blocking for 5 min after 3 failures part 2
- name: "Secure remote authentication with PAM 5"
  ansible.builtin.template:
    src: sshd.j2
    dest: /etc/pam.d/sshd
    owner: root
    group: wheel
    mode: '0644'


- name: "Protecting the stored passwords"
  ansible.builtin.lineinfile:
      path: /etc/login.defs
      regexp: '^ENCRYPT_METHOD'
      line: 'ENCRYPT_METHOD SHA512'
      state: present

- name: Configure PAM for strong hashing in system-auth
  ansible.builtin.lineinfile:
    path: /etc/pam.d/system-auth
    regexp: '^password.*pam_unix.so'
    line: 'password    sufficient    pam_unix.so sha512 shadow try_first_pass use_authtok'
    state: present

- name: Configure PAM for strong hashing in password-auth
  ansible.builtin.lineinfile:
    path: /etc/pam.d/password-auth
    regexp: '^password.*pam_unix.so'
    line: 'password    sufficient    pam_unix.so sha512 shadow try_first_pass use_authtok'
    state: present

- name: Configure password quality policies
  ansible.builtin.lineinfile:
    path: /etc/security/pwquality.conf
    regexp: '^minlen'
    line: 'minlen = 7'
    state: present

- name: Configure password aging policies
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: '^PASS_MAX_DAYS'
    line: 'PASS_MAX_DAYS 90'
    state: present

- name: Restrict access to /etc/shadow
  ansible.builtin.file:
    path: /etc/shadow
    owner: root
    group: wheel
    mode: '0600'

- name: Install and configure auditd
  ansible.builtin.dnf:
    name: audit
    state: present

- name: Add audit rules for password file monitoring
  ansible.builtin.blockinfile:
    path: /etc/audit/rules.d/audit.rules
    block: |
      -w /etc/shadow -p wa -k passwd_changes
      -w /etc/passwd -p wa -k passwd_changes

- name: "Securing access to remote user databases"
  ansible.builtin.dnf:
    name:
      - sssd
      - sssd-client
    state: present

- name: Configure SSSD
  ansible.builtin.template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    owner: root
    group: wheel
    mode: '0600'


- name: Configure NSS to use SSSD
  ansible.builtin.lineinfile:
    path: /etc/nsswitch.conf
    regexp: '^passwd:'
    line: 'passwd:     files sss'
    state: present

- name: Secure SSSD configuration
  ansible.builtin.file:
    path: /etc/sssd/sssd.conf
    owner: root
    group: wheel
    mode: '0600'




# - name: "Separating the system accounts and directory administrator"

# - name: "Implementing a logging system"

# - name: "Implementing dedicated service activity journals"

# - name: "Logging the system activity with auditd"

# - name: "Hardening the local messaging service"

# - name: "Configuring aliases for service accounts"

# - name: "Sealing and checking files integrity"

# - name: "Protecting the sealing database"

# - name: "Partitioning the network services"

# - name: "Hardening and monitoring the exposed services"

# - name: "Minimizing the attack surface of network services"
