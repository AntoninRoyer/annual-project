---
# - name: "Partitioning"

# - name: "Remove unused user accounts"

# - name: "Userpassword strength"

# - name: "Configuring a timeout on local user sessions"

# - name: "Ensuringthe imputability of administration actions"

# - name: "Disabling the service accounts"

# - name: "Uniqueness and exclusivity of service accounts"

# - name: "Changing the default value of UMASK"

# - name: "Using Mandatory Access Control features"

# - name: "Creating a group dedicated to the use of sudo"

# - name: "Sudo configuration guidelines"

# - name: "Using unprivileged users as target for sudo commands"

# - name: "Limiting the number of commands requiring the use of the EXEC directive"

# - name: "Banishing the negations in sudo policies"

# - name: "Defining the arguments in sudo specifications"

# - name: "Editing files securely with sudo"

# - name: "Activating AppArmor security profiles"

# - name: "Activating SELinux with the targeted policy"

# - name: "Containing the unprivileged interactive users"

# - name: "Setting up the SELinux variables"

# - name: "Uninstalling SELinux Policy Debugging Tools"

# - name: "Limiting the rights to access sensitive files and directories"

# - name: "Changing the secrets and access rights as soon as possible"

# - name: "Securing access for named sockets and pipes"

# - name: "Avoiding files or directories without a known user or group"

# - name: "Setting the sticky bit on the writable directories"

# - name: "Dedicating temporary directories to users"

# - name: "Avoiding using executables with setuid and setgid rights"

# - name: "Avoiding using executables with setuid root and setgid root rights"

# - name: "Installing only strictly necessary packages"

# - name: "Using only official package repositories"

# - name: "Using hardened package repositories"

# - name: "Updating regularly the system"

# Partitionning
- name: Get the UUID of /boot partition
  command: findmnt -no UUID /boot
  register: boot_uuid

- name: Ensure /boot partition in /etc/fstab has noauto option
  lineinfile:
    path: /etc/fstab
    regexp: '^(UUID={{ boot_uuid.stdout }}\s+/boot\s+xfs\s+)(.*)'
    line: 'UUID={{ boot_uuid.stdout }} /boot xfs noauto,\2'
    backrefs: yes

- name: Reload systemd to apply changes
  command: systemctl daemon-reload

- name: Ensure /boot is mounted as needed (optional)
  mount:
    path: /boot
    src: UUID={{ boot_uuid.stdout }}
    fstype: xfs
    opts: defaults
    state: mounted
  when: ansible_facts.mounts | selectattr('mount', '==', '/boot') | list | length == 0

- name: Set correct permissions on /boot
  file:
    path: /boot
    owner: root
    group: root
    mode: '0700'
